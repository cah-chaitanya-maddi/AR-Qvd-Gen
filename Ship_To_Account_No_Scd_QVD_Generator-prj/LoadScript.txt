///$tab Doc
/*
 ******************************************************************************
 * Overview:
 *   This is a QVD generator for SHIP_TO_ACCOUNT_NO_SCD information.
 *   Put some usefull description here. 
 * 
 * Sources:
 *   Teradata
 *
 * Outputs:
 *   Ship_To_Account_No_Scd.qvd
 ******************************************************************************
 *
 * Revision History:
 * 
 * 03/03/13 Dennis Duncan
 * Added registry lookup for root folder
 * Changed QVD paths to use vQVDs variable
 * Changed ODBC connection to use vSalesDataWarehouseConnection variable
 * Added meta-data for QlikView names
 * 
 * 03/02/13 Dennis Duncan
 * Added the Doc tab
 * Added the Setup tab
 * Added the include for Defaults.txt script
 * Added the include for File_Locations.txt script
 * Added the include for DB_Connections.txt script
 *
 * 02/27/13 Aaron Zechman
 * Initial Creation
 */
///$tab Setup
LET vRootFileLocation    = GetRegistryString('HKEY_LOCAL_MACHINE\SOFTWARE\Cardinal Health\QlikView', 'RootFolderLocation');
LET vExtractFileLocation = GetRegistryString('HKEY_LOCAL_MACHINE\SOFTWARE\Cardinal Health\QlikView\Extract_Files', 'RootFolderLocation');
LET vEnvironment = GetRegistryString('HKEY_LOCAL_MACHINE\SOFTWARE\Cardinal Health\QlikView', 'Environment');

$(Must_Include=$(vRootFileLocation)Config\$(vEnvironment)\Defaults.qvs);
$(Must_Include=$(vRootFileLocation)Config\$(vEnvironment)\File_Locations.qvs);
$(Must_Include=$(vRootFileLocation)Config\$(vEnvironment)\DB_Connections.qvs);
$(Must_Include=$(vRootFileLocation)Config\$(vEnvironment)\Web.qvs);
$(Must_Include=$(vRootFileLocation)\$(vScriptDir)\Wait_Until_Writable.qvs);
$(Must_Include=$(vRootFileLocation)\$(vScriptDir)\Util.qvs);

//ODBC CONNECT TO '$(vSalesDataWarehouseConnection)';
ODBC CONNECT TO PD_SDW_Stg;
//VIEWST Changes by Sumit 11/06/2020 ARR 262-283
///$tab Ship to Limiter
//*****************************************************************
trace "************************** Checking Environment setting";
//*****************************************************************
if(wildmatch('$(vEnvironment)','*DEV*')) > 0 then

       //*****************************************************************
       trace "************************** DEV LOAD: Loading Ship_To_Limiter table";
       //*****************************************************************
       Ship_To_Limiter:
       load
              ACCT_KEY_NUM as ACCT_KEY_NUM_FILTER
       from
              '$(vRootFileLocation)$(vQVDs)\Dev\Ship_To_Account.qvd'
              (qvd)
       ;

endif;
///$tab Ship_To_Account_No_Scd
/**********************************************************
Create the Ship_To_Account_No_Scd QVD. This is loaded from a TPT extract process.
It is bumped up against the database to load any missing records.

Changelog:
8.16.2013 jeremy.fourman
- Removed all the fields that we are not currently using within the applications.
- Removed writing of statistics
8.28.2013 warren.lea	
  Removed unused fields MSTR_ADDR2_TXT and STORE_ID. Corrected Where clause to use
  SHIP_TO_ACCOUNT_NO_SCD name. 
  Commented out the max_date logic since all data is being loaded.
**********************************************************/

/********************************************
 * Set Statistics Variables
 ********************************************/
let vTimeStamp = Now();
let vStart = Now();
set vTableName = 'Ship_To_Account_No_Scd';
set vQvdFile = '$(vRootFileLocation)$(vQVDs)$(vTableName).qvd';

//*****************************************************************
trace "************************** Load TPT Ship_To_Account file";
//*****************************************************************
Ship_To_Account_No_Scd:
load
 ACCT_KEY_NUM
 ,capitalize(POS_RPT_STORE_NAM) as [POS_RPT_STORE_NAM] 
 ,capitalize(CURR_SR_MIDDLE_INIT_TXT) as [CURR_SR_MIDDLE_INIT_TXT]
 ,capitalize(CURR_SR_FIRST_NAM) as [CURR_SR_FIRST_NAM]
 ,capitalize(CURR_SR_LAST_NAM) as [CURR_SR_LAST_NAM]
 ,CURR_SR_NUM as [Sales Rep #-Curr]
 ,capitalize(CUSTOMER_TYPE_DESC) as [CUSTOMER_TYPE_DESC]
 ,CUSTOMER_TYPE_CDE
 ,DC_ZIP as [DC Zip Code-Curr]
 ,DC_STATE as [DC State-Curr]
 ,capitalize(DC_CITY) as [DC City-Curr]
 ,capitalize(DC_ADDR2_TXT) as [DC Address 2-Curr]
 ,capitalize(DC_ADDR_TXT) as [DC Address]
 ,capitalize(DC_NAM) as [DC Name-Curr]
 ,CARD_ACCT_GROUP_NUM
 ,SALE_REP_NUM
 ,ROW_UPDATE_USER_ID
 ,upper(date(date#(ROW_UPDATE_STP,'YYYY-MM-DD h:mm:ss.ffffff'),'M/D/YYYY h:mm:ss tt'))as [ROW_UPDATE_STP] 
 ,ROW_ADD_USER_ID
 ,upper(date(date#(ROW_ADD_STP,'YYYY-MM-DD h:mm:ss.ffffff'),'M/D/YYYY h:mm:ss tt')) as [ROW_ADD_STP] 
 ,CURR_SHIP_TO_CUSTOMER_NUM as [Account #-Curr]
 ,CURR_SHIP_TO_LOCATION_NUM as [DC #-Curr]
 ,CURR_SHIP_TO_LOCATION_NUM & '-' & CURR_SHIP_TO_CUSTOMER_NUM as [AccountSelector]  
 ,if(VRSN_END_DTE='2/65438/65437',date(1,'MM/DD/YYYY'),date(date#(VRSN_END_DTE,'YYYY/MM/DD'),'MM/DD/YYYY')) as [VRSN_END_DTE] 
 ,if(VRSN_START_DTE='2/65438/65437',date(1,'MM/DD/YYYY'),date(date#(VRSN_START_DTE,'YYYY/MM/DD'),'MM/DD/YYYY')) as [VRSN_START_DTE] 
 ,CURR_VRSN_FLG
 ,capitalize(CLASS_DESC) as [CLASS_DESC]
 ,CLASS_CDE
 ,if(STATE_PHARM_EXT_DTE='2/65438/65437',date(1,'MM/DD/YYYY'),date(date#(STATE_PHARM_EXT_DTE,'YYYY/MM/DD'),'MM/DD/YYYY')) as [State Pharmacy Extension Date-Curr]
 ,if(STATE_PHARM_LIC_EXP_DTE='2/65438/65437',date(1,'MM/DD/YYYY'),date(date#(STATE_PHARM_LIC_EXP_DTE,'YYYY/MM/DD'),'MM/DD/YYYY')) as [State Pharmacy Expiration Date-Curr]
 ,STATE_PHARM_LIC_ID as [State Pharmacy License Number-Curr]
 ,capitalize(ACCT_CLASS_DESC) as [Accounting Class]
 ,ACCT_CLASS_CDE as [Accounting Code]
 ,HIN_ID
 ,if(DEA_EXT_DTE='2/65438/65437',date(1,'MM/DD/YYYY'),date(date#(DEA_EXT_DTE,'YYYY/MM/DD'),'MM/DD/YYYY')) as [Account DEA Extension Date-Curr]
 ,if(DEA_EXP_DTE='2/65438/65437',date(1,'MM/DD/YYYY'),date(date#(DEA_EXP_DTE,'YYYY/MM/DD'),'MM/DD/YYYY')) as [Account DEA Expiration Date-Curr]
 ,DEA_NUM as [Account DEA #-Curr]
 ,capitalize(SALE_REP_MIDDLE_INIT_TXT) as [SALE_REP_MIDDLE_INIT_TXT]
 ,capitalize(SALE_REP_FIRST_NAM) as [SALE_REP_FIRST_NAM]
 ,capitalize(SALE_REP_LAST_NAM) as [SALE_REP_LAST_NAM]
 ,if(len(trim(SALE_REP_MIDDLE_INIT_TXT))=0,capitalize(trim(SALE_REP_FIRST_NAM)) & ' ' & capitalize(trim(SALE_REP_LAST_NAM)), capitalize(trim(SALE_REP_FIRST_NAM)) & ' ' & capitalize(trim(SALE_REP_MIDDLE_INIT_TXT)) & ' ' & capitalize(trim(SALE_REP_LAST_NAM))) as [Sales Rep Name]  
 ,capitalize(ACCT_STAT_DESC) as [Account Active Status]
 ,BILL_TO_CUSTOMER_NUM
 ,BILL_TO_ZIP as [Bill-to Zip Code-Curr]
 ,BILL_TO_STATE as [Bill-to State-Curr]
 ,capitalize(BILL_TO_CITY) as [Bill-to City-Curr]
 ,capitalize(BILL_TO_ADDR2_TXT) as [Bill-to Address 2-Curr]
 ,capitalize(BILL_TO_ADDR_TXT) as [Bill-to Address-Curr]
 ,capitalize(BILL_TO_CUSTOMER_NAM) as [Bill-to Name-Curr]
 ,SHIP_TO_CUSTOMER_NUM
 ,SHIP_TO_LOCATION_NUM
 //,STORE_ID
 ,ZIP  as [Account Zip Code-Curr]
 ,STATE as [Account State-Curr]
 ,capitalize(CITY) as [Account City-Curr]
 ,capitalize(ADDR2_TXT) as [Account Address 2-Curr]
 ,capitalize(ADDR_TXT) as [Account Address-Curr]
 ,capitalize(ACCT2_NAM) as [Account Name 2-Curr]

 ,BILL_TO_GLN_ID 
 ,EDI_867_GLN_DISP_FLG
 ,SHIP_TO_GLN_ID
from
  '$(vExtractFileLocation)SHIP_TO_ACCOUNT_NO_SCD-Caret.txt'
  (txt, codepage is 1252, embedded labels, delimiter is '^', no quotes, no eof)
;

///********************************************
// * Get List of Dates
// ********************************************/
//temp:
//load
//  ROW_UPDATE_STP as Date
//resident
//  Ship_To_Account_No_Scd
//;
//
///********************************************
// * Get Max Date
// ********************************************/
//Max_Date:
//load
//  max(Date) as max_date;
//load
//  FieldValue('Date',IterNo()) as Date
//autogenerate
//  (1)
//while
//  not IsNull(FieldValue('Date',Iterno()));
//
//drop Table temp;
//
//let vLastExecTime = date(Peek('max_date',0,'Max_Date'),'YYYY-MM-DD hh:mm:ss');
//
//drop TABLE Max_Date;

/********************************************
 * Concatenate with the other table
 ********************************************/
concatenate(Ship_To_Account_No_Scd)
load
 ACCT_KEY_NUM
 ,Capitalize(ACCT_NAM) as [Account Name-Curr]
 ,capitalize(POS_RPT_STORE_NAM) as [POS_RPT_STORE_NAM]
 ,capitalize(CURR_SR_MIDDLE_INIT_TXT) as [CURR_SR_MIDDLE_INIT_TXT]
 ,capitalize(CURR_SR_FIRST_NAM) as [CURR_SR_FIRST_NAM]
 ,capitalize(CURR_SR_LAST_NAM) as [CURR_SR_LAST_NAM]
 ,CURR_SR_NUM as [Sales Rep #-Curr]
 ,capitalize(CUSTOMER_TYPE_DESC)
 ,CUSTOMER_TYPE_CDE
 ,DC_ZIP as [DC Zip Code-Curr]
 ,DC_STATE as [DC State-Curr]
 ,capitalize(DC_CITY) as [DC City-Curr]
 ,capitalize(DC_ADDR2_TXT) as [DC Address 2-Curr]
 ,capitalize(DC_ADDR_TXT) as [DC Address]
 ,capitalize(DC_NAM) as [DC Name-Curr]
 ,CARD_ACCT_GROUP_NUM
 ,SALE_REP_NUM
 ,ROW_UPDATE_USER_ID
 ,ROW_UPDATE_STP
 ,ROW_ADD_USER_ID
 ,ROW_ADD_STP
 ,CURR_SHIP_TO_CUSTOMER_NUM as [Account #-Curr]
 ,CURR_SHIP_TO_LOCATION_NUM as [DC #-Curr]
 ,CURR_SHIP_TO_LOCATION_NUM & '-' & CURR_SHIP_TO_CUSTOMER_NUM as [AccountSelector] 
 ,VRSN_END_DTE
 ,VRSN_START_DTE
 ,CURR_VRSN_FLG
 ,capitalize(CLASS_DESC) as [CLASS_DESC]
 ,CLASS_CDE
 ,STATE_PHARM_EXT_DTE as [State Pharmacy Extension Date-Curr]
 ,STATE_PHARM_LIC_EXP_DTE as [State Pharmacy Expiration Date-Curr]
 ,STATE_PHARM_LIC_ID as [State Pharmacy License Number-Curr]
 ,capitalize(ACCT_CLASS_DESC) as [Accounting Class]
 ,ACCT_CLASS_CDE as [Accounting Code]
 ,HIN_ID
 ,DEA_EXT_DTE as [Account DEA Extension Date-Curr]
 ,DEA_EXP_DTE as [Account DEA Expiration Date-Curr]
 ,DEA_NUM as [Account DEA #-Curr]
 ,capitalize(SALE_REP_MIDDLE_INIT_TXT) as [SALE_REP_MIDDLE_INIT_TXT]
 ,capitalize(SALE_REP_FIRST_NAM) as [SALE_REP_FIRST_NAM]
 ,capitalize(SALE_REP_LAST_NAM) as [SALE_REP_LAST_NAM]
 ,if(len(trim(SALE_REP_MIDDLE_INIT_TXT))=0,capitalize(trim(SALE_REP_FIRST_NAM)) & ' ' & capitalize(trim(SALE_REP_LAST_NAM)),  capitalize(trim(SALE_REP_FIRST_NAM)) & ' ' & capitalize(trim(SALE_REP_MIDDLE_INIT_TXT)) & ' ' & capitalize(trim(SALE_REP_LAST_NAM))) as [Sales Rep Name]   
 ,capitalize(ACCT_STAT_DESC) as [Account Active Status]
 ,BILL_TO_CUSTOMER_NUM
 ,BILL_TO_ZIP as [Bill-to Zip Code-Curr]
 ,BILL_TO_STATE as [Bill-to State-Curr]
 ,capitalize(BILL_TO_CITY) as [Bill-to City-Curr]
 ,capitalize(BILL_TO_ADDR2_TXT) as [Bill-to Address 2-Curr]
 ,capitalize(BILL_TO_ADDR_TXT) as [Bill-to Address-Curr]
 ,capitalize(BILL_TO_CUSTOMER_NAM) as [Bill-to Name-Curr]
 ,SHIP_TO_CUSTOMER_NUM
 ,SHIP_TO_LOCATION_NUM
// ,STORE_ID
 ,ZIP as [Account Zip Code-Curr]
 ,STATE as [Account State-Curr]
 ,capitalize(CITY) as [Account City-Curr]
 ,capitalize(ADDR2_TXT) as [Account Address 2-Curr]
 ,capitalize(ADDR_TXT) as [Account Address-Curr]
 ,capitalize(ACCT2_NAM) as [Account Name 2-Curr]
 ,BILL_TO_GLN_ID 
 ,EDI_867_GLN_DISP_FLG
 ,SHIP_TO_GLN_ID
; 
SQL
SELECT
  "ACCT_KEY_NUM",
  "ACCT_NAM",
  "ACCT2_NAM",
  "ADDR_TXT",
  "ADDR2_TXT",
  CITY,
  STATE,
  ZIP,
 "SHIP_TO_LOCATION_NUM",
 "SHIP_TO_CUSTOMER_NUM",
 "BILL_TO_CUSTOMER_NAM",
 "BILL_TO_ADDR_TXT",
 "BILL_TO_ADDR2_TXT",
 "BILL_TO_CITY",
 "BILL_TO_STATE",
 "BILL_TO_ZIP",
 "BILL_TO_CUSTOMER_NUM",
 "ACCT_STAT_DESC",
 "SALE_REP_LAST_NAM",
 "SALE_REP_FIRST_NAM",
 "SALE_REP_MIDDLE_INIT_TXT",
 "DEA_NUM",
 "DEA_EXP_DTE",
 "DEA_EXT_DTE",
 "HIN_ID",
 "ACCT_CLASS_CDE",
 "ACCT_CLASS_DESC",
 "STATE_PHARM_LIC_ID",
 "STATE_PHARM_LIC_EXP_DTE",
 "STATE_PHARM_EXT_DTE",
 "CLASS_CDE",
 "CLASS_DESC",
 "CURR_VRSN_FLG",  
 "VRSN_START_DTE",
 "VRSN_END_DTE",
 "CURR_SHIP_TO_LOCATION_NUM",
 "CURR_SHIP_TO_CUSTOMER_NUM", 
 "ROW_ADD_STP",
 "ROW_ADD_USER_ID",
 "ROW_UPDATE_STP",
 "ROW_UPDATE_USER_ID",
 "SALE_REP_NUM", 
 "CARD_ACCT_GROUP_NUM",
 "DC_NAM",
 "DC_ADDR_TXT",
 "DC_ADDR2_TXT",
 "DC_CITY",
 "DC_STATE",
 "DC_ZIP", 
 "CUSTOMER_TYPE_CDE",
 "CUSTOMER_TYPE_DESC", 
 "CURR_SR_NUM",
 "CURR_SR_LAST_NAM",
 "CURR_SR_FIRST_NAM",
 "CURR_SR_MIDDLE_INIT_TXT", 
 "POS_RPT_STORE_NAM" 
 ,BILL_TO_GLN_ID 
 ,EDI_867_GLN_DISP_FLG
 ,SHIP_TO_GLN_ID
from
  VIEWS.SHIP_TO_ACCOUNT_NO_SCD
WHERE ACCT_NAM not like '%walgreen%' 
and ACCT_NAM not like '%cvs%' 
and ACCT_NAM not like '%walgrns%' 
and ACCT_NAM not like '%walgs%' 
and ACCT_NAM not like '%wlgr%' 
and ACCT_NAM not like '%walgree%' 
and ACCT_NAM not like '%walgrenn%' 
and 
(ACCT_NAM like '%^%' 
OR ADDR_TXT like '%^%' 
OR ADDR2_TXT like '%^%' 
OR ACCT2_NAM like '%^%' 
OR BILL_TO_ADDR_TXT like '%^%' 
OR BILL_TO_ADDR2_TXT like '%^%' 
OR POS_RPT_STORE_NAM like '%^%' 
OR position('0D'XC in POS_RPT_STORE_NAM) > 0) 
AND ((CURR_VRSN_FLG = 'Y' AND CAST(VRSN_END_DTE as char(10))> cast(add_months(current_date, -35) as char(10))) 
   OR EXISTS (SELECT ACCT_KEY_NUM FROM VIEWS.INVOICE_LINE il 
   WHERE il.ACCT_KEY_NUM = SHIP_TO_ACCOUNT_NO_SCD.ACCT_KEY_NUM))
;


//*****************************************************************
trace "************************** Creating Ship_To_Account.qvd";
//*****************************************************************

STORE Ship_To_Account_No_Scd into '$(vRootFileLocation)$(vQVDs)\Ship_To_Account_No_Scd.qvd';
//call store_into_qvd(vTableName, vQvdFile, 0);

/************************************************
		Storing Dev QVD
************************************************/
if(wildmatch('$(vEnvironment)','*DEV*')) > 0 then

	//*****************************************************************
	trace "************************** DEV LOAD: Creating Dev version of Ship_To_Account_No_Scd";
	//*****************************************************************
	NoConcatenate
	Ship_To_Account_No_Scd_dev:
	load 
		* 
	resident
		Ship_To_Account_No_Scd
	where exists(ACCT_KEY_NUM_FILTER, ACCT_KEY_NUM)
	;



store Ship_To_Account_No_Scd_dev into '$(vRootFileLocation)$(vQVDs)\Dev\Ship_To_Account_No_Scd.qvd';
	drop table Ship_To_Account_No_Scd_dev;
	
endif;

//*****************************************************************
trace "************************** Final cleanup";
//*****************************************************************
DROP Table Ship_To_Account_No_Scd;
//call drop_table(vTableName);
