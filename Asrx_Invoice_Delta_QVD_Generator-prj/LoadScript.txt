///$tab Doc
/*
 ******************************************************************************
 * Overview:
 *   This is a QVD generator for ASRX_INVOICE Delta information.
 *   Put some usefull description here. 
 * 
 * Sources:
 *   Teradata
 *
 * Outputs:
 *   Asrx_Invoice.qvd
 ******************************************************************************
 *
 * Revision History:
 * 
 * 03/03/13 Dennis Duncan
 * Added registry lookup for root folder
 * Changed QVD paths to use vQVDs variable
 * Changed ODBC connection to use vSalesDataWarehouseConnection variable
 * Added meta-data for QlikView names
 * 
 * 03/02/13 Dennis Duncan
 * Added the Doc tab
 * Added the Setup tab
 * Added the include for Defaults.txt script
 * Added the include for File_Locations.txt script
 * Added the include for DB_Connections.txt script
 *
 * 04/17/13 Aaron Zechman
 * Initial Creation
 */
///$tab Setup
/**********************************************************
Setup the root directory and the needed include files for
this application.

Changelog:
- 3.6.2014 jeremy.fourman
Added this block.
Added Util.qvs include
Removed Web.qvs include, not needed.
**********************************************************/

LET vRootFileLocation    = GetRegistryString('HKEY_LOCAL_MACHINE\SOFTWARE\Cardinal Health\QlikView', 'RootFolderLocation');
LET vExtractFileLocation = GetRegistryString('HKEY_LOCAL_MACHINE\SOFTWARE\Cardinal Health\QlikView\Extract_Files', 'RootFolderLocation');
LET vEnvironment = GetRegistryString('HKEY_LOCAL_MACHINE\SOFTWARE\Cardinal Health\QlikView', 'Environment');

$(Must_Include=$(vRootFileLocation)Config\$(vEnvironment)\Defaults.qvs);
$(Must_Include=$(vRootFileLocation)Config\$(vEnvironment)\File_Locations.qvs);
$(Must_Include=$(vRootFileLocation)Config\$(vEnvironment)\DB_Connections.qvs);
$(Must_Include=$(vRootFileLocation)\$(vScriptDir)\Wait_Until_Writable.qvs);
$(Must_Include=$(vRootFileLocation)\$(vScriptDir)\Util.qvs);

ODBC CONNECT TO '$(vSalesDataWarehouseConnection)';
///$tab Ship to Limiter
if(wildmatch('$(vEnvironment)','*DEV*')) > 0 then

ship_to_filter:

load 
	AccountSelector
from
	'$(vRootFileLocation)$(vQVDs)\Dev\Ship_To_Account.qvd' (qvd);

endif;
///$tab Asrx_Invoice
Asrx_Invoice:
LOAD INVOICE_KEY_NUM, 
     INVOICE_NUM, 
     INVOICE_DTE, 
     SHIP_TO_CUSTOMER_NUM, 
     SHIP_TO_LOCATION_NUM, 
     AR_DUE_DTE, 
     TRNSCT_CTGRY_CDE, 
     Capitalize(TRNSCT_CTGRY_DESC)      as [TRNSCT_CTGRY_DESC], 
     INVOICE_APRV_STAT_CDE, 
     Capitalize(INVOICE_APRV_STAT_DESC) as [INVOICE_APRV_STAT_DESC], 
     Capitalize(APRV_PRGRS_TXT)         as [APRV_PRGRS_TXT], 
     PO_LIST_KEY_NUM, 
     ROW_ADD_STP, 
     ROW_ADD_USER_ID, 
     ROW_UPDATE_STP, 
     ROW_UPDATE_USER_ID, 
     EDI_SEND_FLG, 
     BRKRG_FLG
FROM
'$(vExtractFileLocation)ASRX_INVOICE-Caret.txt'
(txt, codepage is 1252, embedded labels, delimiter is '^', msq)
//where INVOICE_APRV_STAT_CDE <> '1'
;

store Asrx_Invoice into '$(vRootFileLocation)$(vQVDs)Asrx_Invoice.qvd' (qvd);

DROP Table Asrx_Invoice;

///********************************************
// * Set Statistics Variables
// ********************************************/
//LET vTimeStamp = Now();
//LET vStart = Now();
////SET vTableName = 'Asrx_Invoice';
//set vQvdFile = '$(vRootFileLocation)$(vQVDs)$(vTableName).qvd';
//
///********************************************
// * Get Last Time QVD was Generated and Current Time
// ********************************************/
//LET vThisExecTime = date(Now(),'YYYY-MM-DD hh:mm:ss'); 
//
///********************************************
// * Get List of Dates
// ********************************************/
//temp:
//load
//  ROW_UPDATE_STP as Date
//from
//  '$(vQvdFile)'
//(qvd)
//;
//
///********************************************
// * Get Max Date
// ********************************************/
//Max_Date:
//load
//  min(Date) as min_date,
//  max(Date) as max_date;
//load
//  FieldValue('Date',IterNo()) as Date
//autogenerate(1)
//while not IsNull(FieldValue('Date',Iterno()));
//
///********************************************
// * Drop Table
// ********************************************/
//drop table temp;
//
///********************************************
// * Set vLastExecTime
// ********************************************/
//LET vLastExecTime = date(Peek('max_date',0,'Max_Date'),'YYYY-MM-DD hh:mm:ss');
//
///********************************************
// * Drop Table
// ********************************************/
//DROP TABLE Max_Date; 
//
///********************************************
// * Get Changed/Updated Records
// ********************************************/
//Asrx_Invoice:
//load
//  INVOICE_KEY_NUM
// ,INVOICE_NUM
// ,INVOICE_DTE
// ,SHIP_TO_CUSTOMER_NUM 
// ,SHIP_TO_LOCATION_NUM
// ,AR_DUE_DTE
// ,TRNSCT_CTGRY_CDE
// ,Capitalize(TRNSCT_CTGRY_DESC)      as [TRNSCT_CTGRY_DESC]
// ,INVOICE_APRV_STAT_CDE
// ,Capitalize(INVOICE_APRV_STAT_DESC) as [INVOICE_APRV_STAT_DESC]
// ,Capitalize(APRV_PRGRS_TXT)         as [APRV_PRGRS_TXT]
// ,PO_LIST_KEY_NUM
// ,ROW_ADD_STP
// ,ROW_ADD_USER_ID
// ,ROW_UPDATE_STP
// ,ROW_UPDATE_USER_ID
// ,EDI_SEND_FLG
// ,BRKRG_FLG
//;
//SQL
//SELECT
//  INVOICE_KEY_NUM
// ,INVOICE_NUM
// ,INVOICE_DTE
// ,SHIP_TO_CUSTOMER_NUM
// ,SHIP_TO_LOCATION_NUM
// ,AR_DUE_DTE
// ,TRNSCT_CTGRY_CDE
// ,TRNSCT_CTGRY_DESC
// ,INVOICE_APRV_STAT_CDE
// ,INVOICE_APRV_STAT_DESC
// ,APRV_PRGRS_TXT
// ,PO_LIST_KEY_NUM
// ,ROW_ADD_STP
// ,ROW_ADD_USER_ID
// ,ROW_UPDATE_STP
// ,ROW_UPDATE_USER_ID
// ,EDI_SEND_FLG
// ,BRKRG_FLG
//FROM
//  VIEWS.ASRX_INVOICE
//WHERE  
//  (ROW_UPDATE_STP > cast('$(vLastExecTime)' as timestamp))
////  OR (ROW_ADD_STP >= '$(vLastExecTime)'
////  AND ROW_ADD_STP < '$(vThisExecTime)')  
//;
//
///********************************************
// * Check to see if any new records exists
// * otherwise do not concatenate
// ********************************************/
//LET vDeltaRecords = NoOfRows('$(vTableName)');
//
//IF $(vDeltaRecords) <> 0 THEN
//  /********************************************
//   * Concatenate Records where not exists in
//   * the query above
//   ********************************************/
//  CONCATENATE
//  LOAD
//    INVOICE_KEY_NUM
//   ,INVOICE_NUM
//   ,INVOICE_DTE
//   ,SHIP_TO_CUSTOMER_NUM
//   ,SHIP_TO_LOCATION_NUM
//   ,AR_DUE_DTE
//   ,TRNSCT_CTGRY_CDE
//   ,TRNSCT_CTGRY_DESC
//   ,INVOICE_APRV_STAT_CDE
//   ,INVOICE_APRV_STAT_DESC
//   ,APRV_PRGRS_TXT
//   ,PO_LIST_KEY_NUM
//   ,ROW_ADD_STP
//   ,ROW_ADD_USER_ID
//   ,ROW_UPDATE_STP
//   ,ROW_UPDATE_USER_ID
//   ,EDI_SEND_FLG
//   ,BRKRG_FLG
//  FROM
//    '$(vQvdFile)' (qvd)
//  WHERE
//    NOT EXISTS(INVOICE_KEY_NUM, INVOICE_KEY_NUM)
//  ;
//
//  	store Asrx_Invoice into '$(vRootFileLocation)$(vQVDs)Asrx_Invoice.qvd' (qvd);
//	
//    let vLastExecTime = '$(vThisExecTime)'; 
//    
//endif;
//
//
//
//
//
////if $(f_does_table_exist('Asrx_Invoice')) = 'Y' then 
//if(wildmatch('$(vEnvironment)','*DEV*')) > 0 then
//
//	//*****************************************************************
//	trace "************************** DEV LOAD: Creating Dev version of Asrx_Invoice";
//	//*****************************************************************
//	NoConcatenate
//	Asrx_Invoice_dev:
//	load 
//		*
//	resident
//		Asrx_Invoice
//	where exists(AccountSelector, SHIP_TO_LOCATION_NUM & '-' & SHIP_TO_CUSTOMER_NUM)
//	;
//
//	store Asrx_Invoice_dev into '$(vRootFileLocation)$(vQVDs)\Dev\Asrx_Invoice.qvd';
//
//	drop table Asrx_Invoice_dev;
//endif;
//
//drop table Asrx_Invoice;
//
//if $(f_does_table_exist('ship_to_filter')) = 'Y' then 
//	drop table ship_to_filter;
//endif;

