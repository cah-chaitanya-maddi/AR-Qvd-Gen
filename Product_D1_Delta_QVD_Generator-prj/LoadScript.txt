///$tab Doc
/*
 ******************************************************************************
 * Overview:
 *   This is a QVD generator for Product_D1 Delta information.
 *   Put some usefull description here. 
 * 
 * Sources:
 *   Teradata
 *
 * Outputs:
 *   Product_D1.qvd
 ******************************************************************************
 *
 * Revision History:
 *
 * Rajdeep Biswas 07/23/2014
 * Initial Creation
 */
///$tab Setup
LET vRootFileLocation    = GetRegistryString('HKEY_LOCAL_MACHINE\SOFTWARE\Cardinal Health\QlikView', 'RootFolderLocation');
LET vExtractFileLocation = GetRegistryString('HKEY_LOCAL_MACHINE\SOFTWARE\Cardinal Health\QlikView\Extract_Files', 'RootFolderLocation');
LET vEnvironment = GetRegistryString('HKEY_LOCAL_MACHINE\SOFTWARE\Cardinal Health\QlikView', 'Environment');

$(Must_Include=$(vRootFileLocation)Config\$(vEnvironment)\Defaults.qvs);
$(Must_Include=$(vRootFileLocation)Config\$(vEnvironment)\File_Locations.qvs);
$(Must_Include=$(vRootFileLocation)Config\$(vEnvironment)\DB_Connections.qvs);
$(Must_Include=$(vRootFileLocation)Config\$(vEnvironment)\Web.qvs);
$(Must_Include=$(vRootFileLocation)\$(vScriptDir)\Wait_Until_Writable.qvs);
$(Must_Include=$(vRootFileLocation)\$(vScriptDir)\Util.qvs);

//ODBC CONNECT TO '$(vSalesDataWarehouseConnection)';
ODBC CONNECT TO PD_SDW_Stg;
//VIEWST Changes by Sumit 11/06/2020 ARR 262-270
///$tab Contract_Type
/********************************************
 * Set Statistics Variables
 ********************************************/
LET vTimeStamp = Now();
LET vStart = Now();
SET vTableName = 'Product_D1';
set vQvdFile = '$(vRootFileLocation)$(vQVDs)$(vTableName).qvd';

/********************************************
 * Get Last Time QVD was Generated and Current Time
 ********************************************/
LET vThisExecTime = date(Now(),'YYYY-MM-DD hh:mm:ss'); 

/********************************************
 * Get List of Dates
 ********************************************/
temp:
LOAD
  ROW_UPDATE_STP as Date
FROM
  '$(vQvdFile)'
(qvd);

/********************************************
 * Get Max Date
 ********************************************/
Max_Date:
Load
  min(Date) as min_date,
  max(Date) as max_date;
Load
  FieldValue('Date',IterNo()) as Date
autogenerate(1)
while not IsNull(FieldValue('Date',Iterno()));

/********************************************
 * Drop Table
 ********************************************/
Drop Table temp;

/********************************************
 * Set vLastExecTime
 ********************************************/
LET vLastExecTime = date(Peek('max_date',0,'Max_Date'),'YYYY-MM-DD hh:mm:ss');

/********************************************
 * Drop Table
 ********************************************/
DROP TABLE Max_Date; 

/********************************************
 * Get Changed/Updated Records
 ********************************************/
Product_D1:
LOAD ACCUNET_QTY,
    ADDL_DESC,
    CARD_AHFS_CDE,
    CARD_GCN_ID,
    CARD_GEN_IND_CDE,
    CARD_GPPC_ID,
    CARD_SBST_KEY_ID,
    CORP_DESC,
    CORP_ITEM_NUM,
    CURR_AWP_DLR,
    CURR_CORP_NIFO_DLR,
    CURR_COST_PLUS_DLR,
    CURR_MSRP_DLR,
    CURR_NET_SELL_DLR,
    DEA_SCHED_NUM,
    DP_NUM,
    FORM_ID,
    GEN_NAM,
    HOSP_UOIF_NUM,
    ITEM_DESC,
    ITEM_SIZE_CDE,
    ITEM_TYPE_CDE,
    NDC_CDE,
    NDC_KEY_CDE,
    PACK_QTY,
    PACK_SIZE_QTY,
    PROD_STAT_CDE,
    REFRIG_FLG,
    RETAIL_UOIF_NUM,
    ROW_ADD_STP,
    ROW_ADD_USER_ID,
    ROW_UPDATE_STP,
    ROW_UPDATE_USER_ID,
    SPECIAL_HNDL_CDE,
    STRGTH_H_CDE,
    STRGTH_TXT,
    TRADE_NAM,
    UNIT_CDE,
    UNIT_DOSE_CDE,
    UNIT_H_CDE,
    UNIT_QTY,
    UPC_NUM,
    VENDOR_NUM,
    VENDOR_PROD_ID;
SQL SELECT "ACCUNET_QTY",
    "ADDL_DESC",
    "CARD_AHFS_CDE",
    "CARD_GCN_ID",
    "CARD_GEN_IND_CDE",
    "CARD_GPPC_ID",
    "CARD_SBST_KEY_ID",
    "CORP_DESC",
    "CORP_ITEM_NUM",
    "CURR_AWP_DLR",
    "CURR_CORP_NIFO_DLR",
    "CURR_COST_PLUS_DLR",
    "CURR_MSRP_DLR",
    "CURR_NET_SELL_DLR",
    "DEA_SCHED_NUM",
    "DP_NUM",
    "FORM_ID",
    "GEN_NAM",
    "HOSP_UOIF_NUM",
    "ITEM_DESC",
    "ITEM_SIZE_CDE",
    "ITEM_TYPE_CDE",
    "NDC_CDE",
    "NDC_KEY_CDE",
    "PACK_QTY",
    "PACK_SIZE_QTY",
    "PROD_STAT_CDE",
    "REFRIG_FLG",
    "RETAIL_UOIF_NUM",
    "ROW_ADD_STP",
    "ROW_ADD_USER_ID",
    "ROW_UPDATE_STP",
    "ROW_UPDATE_USER_ID",
    "SPECIAL_HNDL_CDE",
    "STRGTH_H_CDE",
    "STRGTH_TXT",
    "TRADE_NAM",
    "UNIT_CDE",
    "UNIT_DOSE_CDE",
    "UNIT_H_CDE",
    "UNIT_QTY",
    "UPC_NUM",
    "VENDOR_NUM",
    "VENDOR_PROD_ID"
FROM VIEWS."PRODUCT_D1"
WHERE  
  (ROW_UPDATE_STP > cast('$(vLastExecTime)' as timestamp)) 
;

/********************************************
 * Check to see if any new records exists
 * otherwise do not concatenate
 ********************************************/
LET vDeltaRecords = NoOfRows('$(vTableName)');

IF $(vDeltaRecords) <> 0 THEN
  /********************************************
   * Concatenate Records where not exists in
   * the query above
   ********************************************/
  CONCATENATE
  LOAD
    ACCUNET_QTY,
    ADDL_DESC,
    CARD_AHFS_CDE,
    CARD_GCN_ID,
    CARD_GEN_IND_CDE,
    CARD_GPPC_ID,
    CARD_SBST_KEY_ID,
    CORP_DESC,
    CORP_ITEM_NUM,
    CURR_AWP_DLR,
    CURR_CORP_NIFO_DLR,
    CURR_COST_PLUS_DLR,
    CURR_MSRP_DLR,
    CURR_NET_SELL_DLR,
    DEA_SCHED_NUM,
    DP_NUM,
    FORM_ID,
    GEN_NAM,
    HOSP_UOIF_NUM,
    ITEM_DESC,
    ITEM_SIZE_CDE,
    ITEM_TYPE_CDE,
    NDC_CDE,
    NDC_KEY_CDE,
    PACK_QTY,
    PACK_SIZE_QTY,
    PROD_STAT_CDE,
    REFRIG_FLG,
    RETAIL_UOIF_NUM,
    ROW_ADD_STP,
    ROW_ADD_USER_ID,
    ROW_UPDATE_STP,
    ROW_UPDATE_USER_ID,
    SPECIAL_HNDL_CDE,
    STRGTH_H_CDE,
    STRGTH_TXT,
    TRADE_NAM,
    UNIT_CDE,
    UNIT_DOSE_CDE,
    UNIT_H_CDE,
    UNIT_QTY,
    UPC_NUM,
    VENDOR_NUM,
    VENDOR_PROD_ID
  FROM
    '$(vQvdFile)' (qvd)
  WHERE
    NOT EXISTS(CORP_ITEM_NUM)
  ;
  /********************************************
   * Store Dev QVD
   ********************************************/ 
if(wildmatch('$(vEnvironment)','*DEV*')) > 0 then

	//*****************************************************************
	trace "************************** DEV LOAD: Creating Dev version of Order_Entry_Method";
	//*****************************************************************

	store Product_D1 into '$(vRootFileLocation)$(vQVDs)\Dev\Product_D1.qvd';
	
endif;
  /********************************************
   * Store New QVD, if no errors
   ********************************************/ 
	store Product_D1 into '$(vRootFileLocation)$(vQVDs)Product_D1.qvd';;
    let vLastExecTime = '$(vThisExecTime)'; 
END IF

/********************************************
 * Drop table out of memory
 ********************************************/ 
DROP Table Product_D1;

