///$tab Doc
/*
 ******************************************************************************
 * Overview:
 *   This is a QVD generator for Restricted_Product_Set_D1 Delta information.
 *   Put some usefull description here. 
 * 
 * Sources:
 *   Teradata
 *
 * Outputs:
 *   Restricted_Product_Set_D1.qvd
 ******************************************************************************
 *
 * Revision History:
 * 
 * 03/03/13 Dennis Duncan
 * Added registry lookup for root folder
 * Changed QVD paths to use vQVDs variable
 * Changed ODBC connection to use vSalesDataWarehouseConnection variable
 * Added meta-data for QlikView names
 * 
 * 03/02/13 Dennis Duncan
 * Added the Doc tab
 * Added the Setup tab
 * Added the include for Defaults.txt script
 * Added the include for File_Locations.txt script
 * Added the include for DB_Connections.txt script
 *
 * 04/17/13 Aaron Zechman
 * Initial Creation
 */
///$tab Setup
LET vRootFileLocation    = GetRegistryString('HKEY_LOCAL_MACHINE\SOFTWARE\Cardinal Health\QlikView', 'RootFolderLocation');
LET vExtractFileLocation = GetRegistryString('HKEY_LOCAL_MACHINE\SOFTWARE\Cardinal Health\QlikView\Extract_Files', 'RootFolderLocation');
LET vEnvironment = GetRegistryString('HKEY_LOCAL_MACHINE\SOFTWARE\Cardinal Health\QlikView', 'Environment');

$(Must_Include=$(vRootFileLocation)Config\$(vEnvironment)\Defaults.qvs);
$(Must_Include=$(vRootFileLocation)Config\$(vEnvironment)\File_Locations.qvs);
$(Must_Include=$(vRootFileLocation)Config\$(vEnvironment)\DB_Connections.qvs);
$(Must_Include=$(vRootFileLocation)Config\$(vEnvironment)\Web.qvs);
$(Must_Include=$(vRootFileLocation)\$(vScriptDir)\Wait_Until_Writable.qvs);
$(Must_Include=$(vRootFileLocation)\$(vScriptDir)\Util.qvs);

//ODBC CONNECT TO '$(vSalesDataWarehouseConnection)';
ODBC CONNECT TO PD_SDW_Stg;
//VIEWS Changes by Sumit 11/06/2020 ARR 262-280
///$tab Restricted_Product_Set_D1
/********************************************
 * Set Statistics Variables
 ********************************************/
LET vTimeStamp = Now();
LET vStart = Now();
SET vTableName = 'Restricted_Product_Set_D1';
set vQvdFile = '$(vRootFileLocation)$(vQVDs)$(vTableName).qvd';

/********************************************
 * Get Last Time QVD was Generated and Current Time
 ********************************************/
LET vThisExecTime = date(Now(),'YYYY-MM-DD hh:mm:ss'); 

/********************************************
 * Get List of Dates
 ********************************************/
temp:
LOAD
  ROW_UPDATE_STP as Date
FROM
  '$(vQvdFile)'
(qvd);

/********************************************
 * Get Max Date
 ********************************************/
Max_Date:
Load
  min(Date) as min_date,
  max(Date) as max_date;
Load
  FieldValue('Date',IterNo()) as Date
autogenerate(1)
while not IsNull(FieldValue('Date',Iterno()));

/********************************************
 * Drop Table
 ********************************************/
Drop Table temp;

/********************************************
 * Set vLastExecTime
 ********************************************/
LET vLastExecTime = date(Peek('max_date',0,'Max_Date'),'YYYY-MM-DD hh:mm:ss');

/********************************************
 * Drop Table
 ********************************************/
DROP TABLE Max_Date; 

/********************************************
 * Get Changed/Updated Records
 ********************************************/
Restricted_Product_Set_D1:
LOAD
  RSTRCT_PROD_SET_CDE              as [Restricted Product Codes]
 ,Capitalize(RSTRCT_PROD_SET_DESC) as [Restricted Products]
 ,ROW_ADD_STP                      as [ROW_ADD_STP]
 ,ROW_ADD_USER_ID                  as [ROW_ADD_USER_ID]
 ,ROW_UPDATE_STP                   as [ROW_UPDATE_STP]
 ,ROW_UPDATE_USER_ID               as [ROW_UPDATE_USER_ID]
;
SQL
SELECT
  RSTRCT_PROD_SET_CDE
 ,RSTRCT_PROD_SET_DESC
 ,ROW_ADD_STP
 ,ROW_ADD_USER_ID
 ,ROW_UPDATE_STP
 ,ROW_UPDATE_USER_ID
FROM
  VIEWS.RESTRICTED_PRODUCT_SET_D1
WHERE  
  (ROW_UPDATE_STP > cast('$(vLastExecTime)' as timestamp))
//  OR (ROW_ADD_STP >= '$(vLastExecTime)'
//  AND ROW_ADD_STP < '$(vThisExecTime)')  
;

/********************************************
 * Check to see if any new records exists
 * otherwise do not concatenate
 ********************************************/
LET vDeltaRecords = NoOfRows('$(vTableName)');

IF $(vDeltaRecords) <> 0 THEN
  /********************************************
   * Concatenate Records where not exists in
   * the query above
   ********************************************/
  CONCATENATE
  LOAD
    ROW_UPDATE_USER_ID
   ,ROW_UPDATE_STP
   ,ROW_ADD_USER_ID
   ,ROW_ADD_STP
   ,[Restricted Products]
   ,[Restricted Product Codes]
  FROM
	'$(vQvdFile)' (qvd)
  WHERE
    NOT EXISTS([Restricted Product Codes], [Restricted Product Codes])
  ;
  /********************************************
   * Store Dev QVD
   ********************************************/ 
if(wildmatch('$(vEnvironment)','*DEV*')) > 0 then

	//*****************************************************************
	trace "************************** DEV LOAD: Creating Dev version of Restricted_Product_Set_D1";
	//*****************************************************************

	store Restricted_Product_Set_D1 into '$(vRootFileLocation)$(vQVDs)\Dev\Restricted_Product_Set_D1.qvd';
	
endif;
  /********************************************
   * Store New QVD, if no errors
   ********************************************/ 
   
   
   store Restricted_Product_Set_D1 into '$(vRootFileLocation)$(vQVDs)Restricted_Product_Set_D1.qvd';
   
   
  //call store_into_qvd(vTableName, vQvdFile, 0);
  let vLastExecTime = '$(vThisExecTime)'; 
END IF


/********************************************
 * Drop table out of memory
 ********************************************/ 
//call drop_table(vTableName);


drop Table Restricted_Product_Set_D1 ; 

