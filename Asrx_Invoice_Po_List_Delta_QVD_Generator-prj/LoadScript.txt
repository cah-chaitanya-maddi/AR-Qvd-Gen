///$tab Doc
/*
 ******************************************************************************
 * Overview:
 *   This is a QVD generator for ASRX_INVOICE_PO_LIST Delta information.
 *   Put some usefull description here. 
 * 
 * Sources:
 *   Teradata
 *
 * Outputs:
 *   Asrx_Invoice_Po_List.qvd
 ******************************************************************************
 *
 * Revision History:
 * 
 * 03/03/13 Dennis Duncan
 * Added registry lookup for root folder
 * Changed QVD paths to use vQVDs variable
 * Changed ODBC connection to use vSalesDataWarehouseConnection variable
 * Added meta-data for QlikView names
 * 
 * 03/02/13 Dennis Duncan
 * Added the Doc tab
 * Added the Setup tab
 * Added the include for Defaults.txt script
 * Added the include for File_Locations.txt script
 * Added the include for DB_Connections.txt script
 *
 * 04/17/13 Aaron Zechman
 * Initial Creation
 */
///$tab Setup
LET vRootFileLocation    = GetRegistryString('HKEY_LOCAL_MACHINE\SOFTWARE\Cardinal Health\QlikView', 'RootFolderLocation');
LET vExtractFileLocation = GetRegistryString('HKEY_LOCAL_MACHINE\SOFTWARE\Cardinal Health\QlikView\Extract_Files', 'RootFolderLocation');
LET vEnvironment = GetRegistryString('HKEY_LOCAL_MACHINE\SOFTWARE\Cardinal Health\QlikView', 'Environment');

$(Must_Include=$(vRootFileLocation)Config\$(vEnvironment)\Defaults.qvs);
$(Must_Include=$(vRootFileLocation)Config\$(vEnvironment)\File_Locations.qvs);
$(Must_Include=$(vRootFileLocation)Config\$(vEnvironment)\DB_Connections.qvs);
$(Must_Include=$(vRootFileLocation)Config\$(vEnvironment)\Web.qvs);
$(Must_Include=$(vRootFileLocation)\$(vScriptDir)\Wait_Until_Writable.qvs);
$(Must_Include=$(vRootFileLocation)\$(vScriptDir)\Util.qvs);

ODBC CONNECT TO '$(vSalesDataWarehouseConnection)';
//ODBC CONNECT TO PD_SDW_Stg;
//VIEWS Changes by Sumit 11/06/2020 ARR 262-270
///$tab Asrx_Invoice_Filter
//*****************************************************************
trace "************************** Checking Environment setting";
//*****************************************************************
if(wildmatch('$(vEnvironment)','*DEV*')) > 0 then

       //*****************************************************************
       trace "************************** DEV LOAD: Loading Ship_To_Limiter table";
       //*****************************************************************
       ASRX_Invoice_Limiter:
       load
              PO_LIST_KEY_NUM as PO_LIST_KEY_NUM_FILTER
       from
              '$(vRootFileLocation)$(vQVDs)\Dev\Asrx_Invoice.qvd'
              (qvd)
       ;

endif;
///$tab Asrx_Invoice_Po_List
/********************************************
 * Set Statistics Variables
 ********************************************/
LET vTimeStamp = Now();
LET vStart = Now();
SET vTableName = 'Asrx_Invoice_Po_List';
set vQvdFile = '$(vRootFileLocation)$(vQVDs)$(vTableName).qvd';

/********************************************
 * Get Last Time QVD was Generated and Current Time
 ********************************************/
LET vThisExecTime = date(Now(),'YYYY-MM-DD hh:mm:ss'); 

/********************************************
 * Get List of Dates
 ********************************************/
temp:
LOAD
  ROW_UPDATE_STP as Date
FROM
  '$(vQvdFile)'
(qvd);

/********************************************
 * Get Max Date
 ********************************************/
Max_Date:
Load
  min(Date) as min_date,
  max(Date) as max_date;
Load
  FieldValue('Date',IterNo()) as Date
autogenerate(1)
while not IsNull(FieldValue('Date',Iterno()));

/********************************************
 * Drop Table
 ********************************************/
Drop Table temp;

/********************************************
 * Set vLastExecTime
 ********************************************/
LET vLastExecTime = date(Peek('max_date',0,'Max_Date'),'YYYY-MM-DD hh:mm:ss');

/********************************************
 * Drop Table
 ********************************************/
DROP TABLE Max_Date; 

/********************************************
 * Get Changed/Updated Records
 ********************************************/
Asrx_Invoice_Po_List:
LOAD
  PO_ID & '-' & PO_LIST_KEY_NUM as [PRIMARY_KEY]
 ,PO_LIST_KEY_NUM
 ,PO_ID 
 ,GROUP_PO_ID
 ,ROW_ADD_STP 
 ,ROW_ADD_USER_ID
 ,ROW_UPDATE_STP
 ,ROW_UPDATE_USER_ID
;
SQL
SELECT
  PO_LIST_KEY_NUM
 ,PO_ID
 ,GROUP_PO_ID
 ,ROW_ADD_STP
 ,ROW_ADD_USER_ID
 ,ROW_UPDATE_STP
 ,ROW_UPDATE_USER_ID
FROM
  VIEWS.ASRX_INVOICE_PO_LIST
WHERE  
  (ROW_UPDATE_STP > cast('$(vLastExecTime)' as timestamp));
//  OR (ROW_ADD_STP >= '$(vLastExecTime)'
//  AND ROW_ADD_STP < '$(vThisExecTime)') 



/********************************************
 * Check to see if any new records exists
 * otherwise do not concatenate
 ********************************************/
LET vDeltaRecords = NoOfRows('$(vTableName)');

IF $(vDeltaRecords) <> 0 THEN
  /********************************************
   * Concatenate Records where not exists in
   * the query above
   ********************************************/
  CONCATENATE
  LOAD
    PO_LIST_KEY_NUM
   ,PO_ID
   ,GROUP_PO_ID
   ,ROW_ADD_STP
   ,ROW_ADD_USER_ID
   ,ROW_UPDATE_STP
   ,ROW_UPDATE_USER_ID
  FROM
    '$(vQvdFile)' (qvd)
  WHERE
    NOT EXISTS(PRIMARY_KEY, PO_ID & '-' & PO_LIST_KEY_NUM)
  ;

  /********************************************
   * Since Primary Key was composite key need
   * to drop the field
   ********************************************/
  DROP FIELD PRIMARY_KEY;

  /********************************************
   * Store New QVD, if no errors
   ********************************************/ 
	STORE Asrx_Invoice_Po_List into '$(vRootFileLocation)$(vQVDs)\Asrx_Invoice_Po_List.qvd';
	//call store_into_qvd(vTableName, vQvdFile, 0);
	
  /********************************************
   * Store Dev QVD
   ********************************************/ 
if(wildmatch('$(vEnvironment)','*DEV*')) > 0 then

	trace "************************** DEV LOAD: Creating Dev version of Asrx_Invoice_Po_List";

	NoConcatenate
	Asrx_Invoice_Po_List_dev:
	load 
		* 
	resident
		Asrx_Invoice_Po_List
	where exists(PO_LIST_KEY_NUM_FILTER, PO_LIST_KEY_NUM)
	;

	store 
		Asrx_Invoice_Po_List_dev
	into
		'$(vRootFileLocation)$(vQVDs)\Dev\Asrx_Invoice_Po_List.qvd';
	
	drop table Asrx_Invoice_Po_List_dev;
	
endif;

/********************************************
 * Free up memory
 ********************************************/	
	
    let vLastExecTime = '$(vThisExecTime)'; 

END IF


/********************************************
 * Drop table out of memory
 ********************************************/ 
DROP Table Asrx_Invoice_Po_List;
//call drop_table(vTableName);
