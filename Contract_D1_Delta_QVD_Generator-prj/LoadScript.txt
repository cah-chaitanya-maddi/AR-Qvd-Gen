///$tab Doc
/*
 ******************************************************************************
 * Overview:
 *   This is a QVD generator for CONTRACT_D1 Delta information.
 *   Put some usefull description here. 
 * 
 * Sources:
 *   Teradata
 *
 * Outputs:
 *   Contract_D1.qvd
 ******************************************************************************
 *
 * Revision History:
 * 
 * 03/03/13 Dennis Duncan
 * Added registry lookup for root folder
 * Changed QVD paths to use vQVDs variable
 * Changed ODBC connection to use vSalesDataWarehouseConnection variable
 * Added meta-data for QlikView names
 * 
 * 03/02/13 Dennis Duncan
 * Added the Doc tab
 * Added the Setup tab
 * Added the include for Defaults.txt script
 * Added the include for File_Locations.txt script
 * Added the include for DB_Connections.txt script
 *
 * 04/16/13 Aaron Zechman
 * Initial Creation
 */
///$tab Setup
LET vRootFileLocation    = GetRegistryString('HKEY_LOCAL_MACHINE\SOFTWARE\Cardinal Health\QlikView', 'RootFolderLocation');
LET vExtractFileLocation = GetRegistryString('HKEY_LOCAL_MACHINE\SOFTWARE\Cardinal Health\QlikView\Extract_Files', 'RootFolderLocation');
LET vEnvironment = GetRegistryString('HKEY_LOCAL_MACHINE\SOFTWARE\Cardinal Health\QlikView', 'Environment');

$(Must_Include=$(vRootFileLocation)Config\$(vEnvironment)\Defaults.qvs);
$(Must_Include=$(vRootFileLocation)Config\$(vEnvironment)\File_Locations.qvs);
$(Must_Include=$(vRootFileLocation)Config\$(vEnvironment)\DB_Connections.qvs);
$(Must_Include=$(vRootFileLocation)Config\$(vEnvironment)\Web.qvs);

//ODBC CONNECT TO '$(vSalesDataWarehouseConnection)';
ODBC CONNECT TO PD_SDW_Stg;
//VIEWS Changes by Sumit 11/06/2020 ARR 262-264
///$tab Contract_D1
/**********************************************************
Create the Contract_D1.qvd

Changelog:
8.14.2013 jeremy.fourman
- Removed writing of statistics QVD
**********************************************************/

/********************************************
 * Set Statistics Variables
 ********************************************/
let vTimeStamp = Now();
let vStart = Now();
set vTableName = 'Contract_D1';

/********************************************
 * Get Last Time QVD was Generated and Current Time
 ********************************************/
LET vThisExecTime = date(Now(),'YYYY-MM-DD hh:mm:ss'); 

/********************************************
 * Get List of Dates
 ********************************************/
temp:
load
  ROW_UPDATE_STP as Date
from
  '$(vRootFileLocation)$(vQVDs)$(vTableName).qvd'
(qvd);

/********************************************
 * Get Max Date
 ********************************************/
Max_Date:
load
  min(Date) as min_date,
  max(Date) as max_date;
load
  FieldValue('Date',IterNo()) as Date
autogenerate(1)
while not IsNull(FieldValue('Date',Iterno()));


drop Table temp;

/********************************************
 * Set vLastExecTime
 ********************************************/
let vLastExecTime = date(Peek('max_date',0,'Max_Date'),'YYYY-MM-DD hh:mm:ss');

/********************************************
 * Drop Table
 ********************************************/
drop table Max_Date; 

/********************************************
 * Get Changed/Updated Records
 ********************************************/
Contract_D1:
load
  CNTRCT_NUM                         as [CNTRCT_NUM]
 ,Capitalize(VENDOR_CNTRCT_RFRNC_ID) as [Mfr Contract #]
 ,START_DTE                          as [START_DTE]
 ,END_DTE                            as [END_DTE]
 ,CNTRCT_GROUP_NUM                   as [CNTRCT_GROUP_NUM]
 ,CNTRCT_TYPE_CDE                    as [CNTRCT_TYPE_CDE]
 ,VENDOR_NUM                         as [VENDOR_NUM]
 ,ROW_ADD_STP                        as [ROW_ADD_STP]
 ,ROW_ADD_USER_ID                    as [ROW_ADD_USER_ID]
 ,ROW_UPDATE_STP                     as [ROW_UPDATE_STP]
 ,ROW_UPDATE_USER_ID                 as [ROW_UPDATE_USER_ID]
;
SQL
SELECT
  CNTRCT_NUM
 ,VENDOR_CNTRCT_RFRNC_ID
 ,START_DTE
 ,END_DTE
 ,CNTRCT_GROUP_NUM
 ,CNTRCT_TYPE_CDE
 ,VENDOR_NUM
 ,ROW_ADD_STP
 ,ROW_ADD_USER_ID
 ,ROW_UPDATE_STP
 ,ROW_UPDATE_USER_ID
FROM
  VIEWS.CONTRACT_D1
WHERE  
  (ROW_UPDATE_STP > cast('$(vLastExecTime)' as timestamp))
//  OR (ROW_ADD_STP >= '$(vLastExecTime)'
//  AND ROW_ADD_STP < '$(vThisExecTime)')  
;

/********************************************
 * Check to see if any new records exists
 * otherwise do not concatenate
 ********************************************/
let vDeltaRecords = NoOfRows('$(vTableName)');

if $(vDeltaRecords) <> 0 then
  /********************************************
   * Concatenate Records where not exists in
   * the query above
   ********************************************/
  concatenate
  load
    ROW_UPDATE_USER_ID
   ,ROW_UPDATE_STP
   ,ROW_ADD_USER_ID
   ,ROW_ADD_STP
   ,VENDOR_NUM
   ,CNTRCT_TYPE_CDE
   ,CNTRCT_GROUP_NUM
   ,END_DTE
   ,START_DTE
   ,[Mfr Contract #]
   ,CNTRCT_NUM
  from
    '$(vRootFileLocation)$(vQVDs)Contract_D1.qvd' (qvd)
  where
    not exists(CNTRCT_NUM, CNTRCT_NUM)
  ;

 
 store Contract_D1 into '$(vRootFileLocation)$(vQVDs)Contract_D1.qvd';
 
 drop table Contract_D1;
 
endif;






