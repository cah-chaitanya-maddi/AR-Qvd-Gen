///$tab Doc
/*
 ******************************************************************************
 * Overview:
 *   This is a QVD generator for ACCOUNT_GROUP_RLT Delta information.
 *   Put some usefull description here. 
 * 
 * Sources:
 *   Teradata
 *
 * Outputs:
 *   Account_Group_Rlt.qvd
 ******************************************************************************
 *
 * Revision History:
 * 
 * 03/03/13 Dennis Duncan
 * Added registry lookup for root folder
 * Changed QVD paths to use vQVDs variable
 * Changed ODBC connection to use vSalesDataWarehouseConnection variable
 * Added meta-data for QlikView names
 * 
 * 03/02/13 Dennis Duncan
 * Added the Doc tab
 * Added the Setup tab
 * Added the include for Defaults.txt script
 * Added the include for File_Locations.txt script
 * Added the include for DB_Connections.txt script
 *
 * 04/15/13 Aaron Zechman
 * Initial Creation
 */
///$tab Setup
LET vRootFileLocation = GetRegistryString('HKEY_LOCAL_MACHINE\SOFTWARE\Cardinal Health\QlikView', 'RootFolderLocation');
LET vExtractFileLocation = GetRegistryString('HKEY_LOCAL_MACHINE\SOFTWARE\Cardinal Health\QlikView\Extract_Files', 'RootFolderLocation');
LET vEnvironment = GetRegistryString('HKEY_LOCAL_MACHINE\SOFTWARE\Cardinal Health\QlikView', 'Environment');

$(Must_Include=$(vRootFileLocation)Config\$(vEnvironment)\Defaults.qvs);
$(Must_Include=$(vRootFileLocation)Config\$(vEnvironment)\File_Locations.qvs);
$(Must_Include=$(vRootFileLocation)Config\$(vEnvironment)\DB_Connections.qvs);
$(Must_Include=$(vRootFileLocation)Config\$(vEnvironment)\Web.qvs);
$(Must_Include=$(vRootFileLocation)\$(vScriptDir)\Wait_Until_Writable.qvs);
$(Must_Include=$(vRootFileLocation)\$(vScriptDir)\Util.qvs);

ODBC CONNECT TO '$(vSalesDataWarehouseConnection)';
//ODBC CONNECT TO PD_SDW_Stg;
//VIEWST Changes by Sumit 11/06/2020 ARR 262-270
///$tab 1st Run QA
Account_Group_Rlt:

SQL
SELECT
  ACCT_KEY_NUM
 ,USER_ACCT_GROUP_NUM
 ,ACTIVE_ACCT_FLG
 ,ROW_ADD_STP
 ,ROW_ADD_USER_ID
 ,ROW_UPDATE_STP
 ,ROW_UPDATE_USER_ID
from
  VIEWS.ACCOUNT_GROUP_RLT
  ;
  
  STORE Account_Group_Rlt into '$(vRootFileLocation)$(vQVDs)Account_Group_Rlt.qvd';	 
  
 
DROP Table Account_Group_Rlt;

EXIT SCRIPT;
///$tab Account_Group_Rlt
/*********************************************************************************
Update Account_Group_Rlt QVD with new records.

Changelog:
- 8.2.2013 jeremy.fourman
 Removed un neeeded aliases
 Added trace staements for logging pruposes to understand where we are in processes and logic brnaches.
 Added Errormode = 0. QlikView will ignore errors in the script at this point and execution will keep running instead of popping up error messages and or failing in the reload process.
 Added loop to continue to try and write the QVD.

- 7.29.2015 rajdeep.biswas
 Removed the delta load altogather. This is being done since rows are getting physically deleted when users remove account from account group.
 The delta load cannot account for physically deleted rows. refer REQ0611895. The table is not maintained by ETL. 
*********************************************************************************/


/********************************************
 * Set Statistics Variables
 ********************************************/
let vTimeStamp = Now();
let vStart = Now();
set vTableName = 'Account_Group_Rlt';
set vQvdFile = '$(vRootFileLocation)$(vQVDs)$(vTableName).qvd';

/********************************************
 * Get Last Time QVD was Generated and Current Time
 ********************************************/
let vThisExecTime = date(Now(),'YYYY-MM-DD hh:mm:ss'); 

/********************************************
 * Get List of Dates
 ********************************************/
temp:
load
  ROW_UPDATE_STP as Date
from
  '$(vQvdFile)'
(qvd);

/********************************************
 * Get Max Date
 ********************************************/
Max_Date:
load
  min(Date) as min_date,
  max(Date) as max_date;
load
  FieldValue('Date',IterNo()) as Date
autogenerate(1)
while not IsNull(FieldValue('Date',Iterno()));


drop table temp;

/********************************************
 * Set vLastExecTime
 ********************************************/
let vLastExecTime = date(Peek('max_date',0,'Max_Date'),'YYYY-MM-DD hh:mm:ss');

drop table Max_Date; 

/********************************************
* Get Changed/Updated Records
*********************************************/
trace "**************************** Create Account_Group_Rlt";
 
Account_Group_Rlt:
load
  ACCT_KEY_NUM & '-' & USER_ACCT_GROUP_NUM as [PRIMARY_KEY]
 ,ACCT_KEY_NUM
 ,USER_ACCT_GROUP_NUM
 ,ACTIVE_ACCT_FLG
 ,ROW_ADD_STP
 ,ROW_ADD_USER_ID
 ,ROW_UPDATE_STP
 ,ROW_UPDATE_USER_ID
;
SQL
SELECT
  ACCT_KEY_NUM
 ,USER_ACCT_GROUP_NUM
 ,ACTIVE_ACCT_FLG
 ,ROW_ADD_STP
 ,ROW_ADD_USER_ID
 ,ROW_UPDATE_STP
 ,ROW_UPDATE_USER_ID
from
  VIEWS.ACCOUNT_GROUP_RLT		//VIEWST Changes by Sumit 11/06/2020 ARR 262-270
//WHERE  
//  (ROW_UPDATE_STP > cast('$(vLastExecTime)' as timestamp))
//  AND ROW_UPDATE_STP < '$(vThisExecTime)')
//  OR (ROW_ADD_STP >= '$(vLastExecTime)'
//  AND ROW_ADD_STP < '$(vThisExecTime)')   
;

/********************************************
 * Check to see if any new records exists
 * otherwise do not concatenate
 ********************************************/
//let vDeltaRecords = NoOfRows('$(vTableName)');
//
//if $(vDeltaRecords) > 0 then
//
//	 trace "**************************** Adding New Records to Account_Group_Rlt";
//	 /********************************************
//	  * Concatenate Records where not exists in the query above
//	  ********************************************/
//	 concatenate
//	 load
//	   ROW_UPDATE_USER_ID
//	  ,ROW_UPDATE_STP
//	  ,ROW_ADD_USER_ID
//	  ,ROW_ADD_STP
//	  ,ACTIVE_ACCT_FLG
//	  ,USER_ACCT_GROUP_NUM
//	  ,ACCT_KEY_NUM
//	 from
//	   '$(vQvdFile)' (qvd)
//	 where
//	   not exists(PRIMARY_KEY, ACCT_KEY_NUM & '-' & USER_ACCT_GROUP_NUM)
//	 ;
//	
//	  //Since Primary Key was composite key need to drop the field   
//	  drop field PRIMARY_KEY;
//	  
//	 /********************************************
//	 * Store QVD
//	 ********************************************/
	STORE Account_Group_Rlt into '$(vRootFileLocation)$(vQVDs)Account_Group_Rlt.qvd';	 
	let vLastExecTime = '$(vThisExecTime)'; 
	 
//endif;  
DROP Table Account_Group_Rlt;
