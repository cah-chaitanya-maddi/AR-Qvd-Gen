///$tab Doc
/*
 ******************************************************************************
 * Overview:
 *   This is a QVD generator for TIME_DETAIL Delta information.
 *   Put some usefull description here. 
 * 
 * Sources:
 *   Teradata
 *
 * Outputs:
 *   Time_Detail.qvd
 ******************************************************************************
 *
 * Revision History:
 * 
 * 03/03/13 Dennis Duncan
 * Added registry lookup for root folder
 * Changed QVD paths to use vQVDs variable
 * Changed ODBC connection to use vSalesDataWarehouseConnection variable
 * Added meta-data for QlikView names
 * 
 * 03/02/13 Dennis Duncan
 * Added the Doc tab
 * Added the Setup tab
 * Added the include for Defaults.txt script
 * Added the include for File_Locations.txt script
 * Added the include for DB_Connections.txt script
 *
 * 04/17/13 Aaron Zechman
 * Initial Creation
 */
///$tab Setup
LET vRootFileLocation    = GetRegistryString('HKEY_LOCAL_MACHINE\SOFTWARE\Cardinal Health\QlikView', 'RootFolderLocation');
LET vExtractFileLocation = GetRegistryString('HKEY_LOCAL_MACHINE\SOFTWARE\Cardinal Health\QlikView\Extract_Files', 'RootFolderLocation');
LET vEnvironment = GetRegistryString('HKEY_LOCAL_MACHINE\SOFTWARE\Cardinal Health\QlikView', 'Environment');

$(Must_Include=$(vRootFileLocation)Config\$(vEnvironment)\Defaults.qvs);
$(Must_Include=$(vRootFileLocation)Config\$(vEnvironment)\File_Locations.qvs);
$(Must_Include=$(vRootFileLocation)Config\$(vEnvironment)\DB_Connections.qvs);
$(Must_Include=$(vRootFileLocation)Config\$(vEnvironment)\Web.qvs);
$(Must_Include=$(vRootFileLocation)\$(vScriptDir)\Wait_Until_Writable.qvs);
$(Must_Include=$(vRootFileLocation)\$(vScriptDir)\Util.qvs);

//ODBC CONNECT TO '$(vSalesDataWarehouseConnection)';
ODBC CONNECT TO PD_SDW_Stg;		//VIEWST Changes by Sumit 11/06/2020 ARR 262-270
///$tab Time_Detail
/********************************************
 * Set Statistics Variables
 ********************************************/
LET vTimeStamp = Now();
LET vStart = Now();
SET vTableName = 'Time_Detail';
set vQvdFile = '$(vRootFileLocation)$(vQVDs)$(vTableName).qvd';

/********************************************
 * Get Last Time QVD was Generated and Current Time
 ********************************************/
LET vThisExecTime = date(Now(),'YYYY-MM-DD hh:mm:ss'); 

/********************************************
 * Get List of Dates
 ********************************************/
temp:
LOAD
  ROW_UPDATE_STP as Date
FROM
  '$(vQvdFile)'
(qvd);

/********************************************
 * Get Max Date
 ********************************************/
Max_Date:
Load
  min(Date) as min_date,
  max(Date) as max_date;
Load
  FieldValue('Date',IterNo()) as Date
autogenerate(1)
while not IsNull(FieldValue('Date',Iterno()));

/********************************************
 * Drop Table
 ********************************************/
Drop Table temp;

/********************************************
 * Set vLastExecTime
 ********************************************/
LET vLastExecTime = date(Peek('max_date',0,'Max_Date'),'YYYY-MM-DD hh:mm:ss');

/********************************************
 * Drop Table
 ********************************************/
DROP TABLE Max_Date; 

/********************************************
 * Get Changed/Updated Records
 ********************************************/
Time_Detail:
LOAD
  DTE_KEY_NUM        as [DTE_KEY_NUM]
 ,SMRY_DTE           as [SMRY_DTE]
 ,YR_NUM             as [YR_NUM]
 ,MTH_NUM            as [MTH_NUM]
 ,QTR_NUM            as [QTR_NUM]
 ,DAY_OF_MTH_NUM     as [DAY_OF_MTH_NUM]
 ,DAY_OF_WEEK_ID     as [DAY_OF_WEEK_ID]
 ,WEEK_OF_YR_NUM     as [WEEK_OF_YR_NUM]
 ,FISCAL_PERIOD_ID   as [FISCAL_PERIOD_ID]
 ,HLDY_FLG           as [HLDY_FLG]
 ,SMRY_NUM           as [SMRY_NUM]
 ,LAST_YR_SMRY_NUM   as [LAST_YR_SMRY_NUM]
 ,LAST_3_MTH_FLG     as [LAST_3_MTH_FLG]
 ,LAST_6_MTH_FLG     as [LAST_6_MTH_FLG]
 ,CLNDR_PERIOD_ID    as [CLNDR_PERIOD_ID]
 ,RFRNC_DTE          as [RFRNC_DTE]
 ,RFRNC_DTE          as [Invoice Date] 
 ,ROW_ADD_STP        as [ROW_ADD_STP]
 ,ROW_ADD_USER_ID    as [ROW_ADD_USER_ID]
 ,ROW_UPDATE_STP     as [ROW_UPDATE_STP]
 ,ROW_UPDATE_USER_ID as [ROW_UPDATE_USER_ID]
 ,SMRY_KEY_NUM       as [SMRY_KEY_NUM]
 ,CIM_WEEK_END_DTE   as [CIM_WEEK_END_DTE]
;
SQL
SELECT
  DTE_KEY_NUM
 ,SMRY_DTE
 ,YR_NUM
 ,MTH_NUM
 ,QTR_NUM
 ,DAY_OF_MTH_NUM
 ,DAY_OF_WEEK_ID
 ,WEEK_OF_YR_NUM
 ,FISCAL_PERIOD_ID
 ,HLDY_FLG
 ,SMRY_NUM
 ,LAST_YR_SMRY_NUM
 ,LAST_3_MTH_FLG
 ,LAST_6_MTH_FLG
 ,CLNDR_PERIOD_ID
 ,RFRNC_DTE
 ,ROW_ADD_STP
 ,ROW_ADD_USER_ID
 ,ROW_UPDATE_STP
 ,ROW_UPDATE_USER_ID
 ,SMRY_KEY_NUM
 ,CIM_WEEK_END_DTE
FROM
  VIEWST.TIME_DETAIL		//VIEWST Changes by Sumit 11/06/2020 ARR 262-270
WHERE  
  (ROW_UPDATE_STP > cast('$(vLastExecTime)' as timestamp))
//  OR (ROW_ADD_STP >= '$(vLastExecTime)'
//  AND ROW_ADD_STP < '$(vThisExecTime)')  
;

/********************************************
 * Check to see if any new records exists
 * otherwise do not concatenate
 ********************************************/
LET vDeltaRecords = NoOfRows('$(vTableName)');

IF $(vDeltaRecords) <> 0 THEN
  /********************************************
   * Concatenate Records where not exists in
   * the query above
   ********************************************/
  CONCATENATE
  LOAD
    CIM_WEEK_END_DTE
   ,SMRY_KEY_NUM
   ,ROW_UPDATE_USER_ID
   ,ROW_UPDATE_STP
   ,ROW_ADD_USER_ID
   ,ROW_ADD_STP
   ,RFRNC_DTE
   ,[Invoice Date]
   ,CLNDR_PERIOD_ID
   ,LAST_6_MTH_FLG
   ,LAST_3_MTH_FLG
   ,LAST_YR_SMRY_NUM
   ,SMRY_NUM
   ,HLDY_FLG
   ,FISCAL_PERIOD_ID
   ,WEEK_OF_YR_NUM
   ,DAY_OF_WEEK_ID
   ,DAY_OF_MTH_NUM
   ,QTR_NUM
   ,MTH_NUM
   ,YR_NUM
   ,SMRY_DTE
   ,DTE_KEY_NUM
  FROM
	'$(vQvdFile)' (qvd)
  WHERE
    NOT EXISTS(DTE_KEY_NUM, DTE_KEY_NUM)
  ;

  /********************************************
   * Store New QVD, if no errors
   ********************************************/ 
//  call store_into_qvd(vTableName, vQvdFile, 0);
  store Time_Detail into '$(vRootFileLocation)$(vQVDs)Time_Detail.qvd';
  let vLastExecTime = '$(vThisExecTime)'; 

/********************************************
 * Store Dev QVD
 ********************************************/
if(wildmatch('$(vEnvironment)','*DEV*')) > 0 then

trace "************************** DEV LOAD: Dev copy for Time_Detail";
store Time_Detail into '$(vRootFileLocation)$(vQVDs)\Dev\Time_Detail.qvd';
	
endif;

END IF

/********************************************
 * Drop table out of memory
 ********************************************/ 
call drop_table(vTableName);
